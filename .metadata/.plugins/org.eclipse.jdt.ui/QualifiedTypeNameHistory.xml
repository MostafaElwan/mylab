<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.elwan.microservices.currencyconversionservice.CurrencyExchangeServiceProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="com.elwan.microservices.currencyconversionservice.CurrencyConversionBean"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="java.net.http.HttpClient"/>
    <fullyQualifiedTypeName name="org.apache.http.client.HttpClient"/>
    <fullyQualifiedTypeName name="reactor.netty.http.client.HttpClient"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AbstractAuthenticationToken"/>
    <fullyQualifiedTypeName name="com.elwan.microservices.routerservice.RealmRoleConverter"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.config.EnableWebFlux"/>
    <fullyQualifiedTypeName name="org.keycloak.adapters.springsecurity.config.KeycloakWebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"/>
    <fullyQualifiedTypeName name="org.keycloak.adapters.springsecurity.client.KeycloakClientRequestFactory"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.boot.actuate.web.exchanges.HttpExchange.Principal"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="java.security.Principal"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties.Jwt"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="com.elwan.microservices.forexservice.CommonController"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContext"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.resource.authentication.AbstractOAuth2TokenAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.endpoint.OAuth2AuthorizationRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="java.util.Objects"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.OAuth2AccessToken"/>
    <fullyQualifiedTypeName name="com.elwan.microservices.currencyconversionservice.security.fiegn.OAuth2Provider"/>
    <fullyQualifiedTypeName name="lombok.extern.java.Log"/>
    <fullyQualifiedTypeName name="lombok.extern.log4j.Log4j"/>
    <fullyQualifiedTypeName name="lombok.extern.flogger.Flogger"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="com.elwan.microservices.currencyconversionservice.security.fiegn.BarAuthZConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizedClientRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClientId"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.registration.ClientRegistration"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.Jwt"/>
    <fullyQualifiedTypeName name="org.springframework.core.convert.converter.Converter"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="jakarta.annotation.security.RolesAllowed"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.annotation.Secured"/>
</qualifiedTypeNameHistroy>
